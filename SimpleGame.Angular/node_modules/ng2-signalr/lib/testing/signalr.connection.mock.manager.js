"use strict";
var Subject_1 = require("rxjs/Subject");
var signalr_connection_mock_1 = require("./signalr.connection.mock");
var SignalRConnectionMockManager = (function () {
    function SignalRConnectionMockManager() {
        this._errors$ = new Subject_1.Subject();
        this._status$ = new Subject_1.Subject();
        this._invokeListeners = {};
        this._object = new signalr_connection_mock_1.SignalRConnectionMock(this._errors$, this._status$, this._invokeListeners);
    }
    Object.defineProperty(SignalRConnectionMockManager.prototype, "mock", {
        get: function () {
            return this._object;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SignalRConnectionMockManager.prototype, "errors$", {
        get: function () {
            return this._errors$;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SignalRConnectionMockManager.prototype, "status$", {
        get: function () {
            return this._status$;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SignalRConnectionMockManager.prototype, "invokeListeners", {
        get: function () {
            return this._invokeListeners;
        },
        enumerable: true,
        configurable: true
    });
    return SignalRConnectionMockManager;
}());
exports.SignalRConnectionMockManager = SignalRConnectionMockManager;
//# sourceMappingURL=signalr.connection.mock.manager.js.map